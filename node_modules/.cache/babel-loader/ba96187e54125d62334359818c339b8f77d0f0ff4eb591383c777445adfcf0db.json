{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hikme\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\metamask-connection\\\\metamask-connection\\\\src\\\\metamask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MetaMask = () => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaulAccount, setDefaultAccount] = useState(null);\n  const [userBalance, setUserBalance] = useState(null);\n  const connectWallet = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChanged([result[0]]);\n      });\n    } else {\n      setErrorMessage('Install MetaMask!');\n    }\n  };\n  const accountChanged = accountName => {\n    setDefaultAccount(accountName);\n    getUserBalance(accountName);\n  };\n  const getUserBalance = accountAddress => {\n    window.ethereum.request({\n      method: 'eth_getBalance',\n      params: [String(accountAddress), \"latest\"]\n    }).then(balance => {\n      setUserBalance(ethers.formatEther(balance));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"MetaMask Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Address: \", defaulAccount, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Balance:  \", userBalance, \" Eth \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), errorMessage]\n  }, void 0, true);\n};\n_s(MetaMask, \"mBUYTEfVLKOCspF68hK9pD2PW2Q=\");\n_c = MetaMask;\nexport default MetaMask;\nvar _c;\n$RefreshReg$(_c, \"MetaMask\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","Fragment","_Fragment","MetaMask","_s","errorMessage","setErrorMessage","defaulAccount","setDefaultAccount","userBalance","setUserBalance","connectWallet","window","ethereum","request","method","then","result","accountChanged","accountName","getUserBalance","accountAddress","params","String","balance","formatEther","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hikme/OneDrive/Masaüstü/metamask-connection/metamask-connection/src/metamask.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { ethers  } from 'ethers';\r\n\r\n\r\nconst MetaMask = () => {\r\n   \r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [defaulAccount, setDefaultAccount] = useState(null);\r\n  const [userBalance, setUserBalance] = useState(null);\r\n  \r\n\r\n  const connectWallet= () => {\r\n    if(window.ethereum){\r\n      window.ethereum.request({method:'eth_requestAccounts'})\r\n      .then(result => {\r\n        accountChanged([result[0]])\r\n      })\r\n    } else {\r\n      setErrorMessage('Install MetaMask!')\r\n    }\r\n  }\r\n\r\n  const accountChanged = (accountName) => {\r\n    setDefaultAccount(accountName)\r\n    getUserBalance(accountName)\r\n  }\r\n  \r\n  const getUserBalance = (accountAddress) =>{\r\n    window.ethereum.request({method:'eth_getBalance', params:[String(accountAddress) , \"latest\"]})\r\n    .then(balance =>{\r\n      setUserBalance(ethers.formatEther(balance));\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <p>MetaMask Connection</p>\r\n      <button onClick={connectWallet}>Connect Wallet Button</button>\r\n      <h3>Address: {defaulAccount} </h3>\r\n      <h3>Balance:  {userBalance} Eth </h3>\r\n     \r\n\r\n    \r\n     {errorMessage}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MetaMask;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,MAAM,QAAS,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,aAAa,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACzD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAGpD,MAAMc,aAAa,GAAEA,CAAA,KAAM;IACzB,IAAGC,MAAM,CAACC,QAAQ,EAAC;MACjBD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAACC,MAAM,EAAC;MAAqB,CAAC,CAAC,CACtDC,IAAI,CAACC,MAAM,IAAI;QACdC,cAAc,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLX,eAAe,CAAC,mBAAmB,CAAC;IACtC;EACF,CAAC;EAED,MAAMY,cAAc,GAAIC,WAAW,IAAK;IACtCX,iBAAiB,CAACW,WAAW,CAAC;IAC9BC,cAAc,CAACD,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMC,cAAc,GAAIC,cAAc,IAAI;IACxCT,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAACC,MAAM,EAAC,gBAAgB;MAAEO,MAAM,EAAC,CAACC,MAAM,CAACF,cAAc,CAAC,EAAG,QAAQ;IAAC,CAAC,CAAC,CAC7FL,IAAI,CAACQ,OAAO,IAAG;MACdd,cAAc,CAACZ,MAAM,CAAC2B,WAAW,CAACD,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC;EAGD,oBAEExB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC1B9B,OAAA;MAAQ+B,OAAO,EAAEpB,aAAc;MAAAe,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9D9B,OAAA;MAAA0B,QAAA,GAAI,WAAS,EAACnB,aAAa,EAAC,GAAC;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC9B,OAAA;MAAA0B,QAAA,GAAI,YAAU,EAACjB,WAAW,EAAC,OAAK;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAIrCzB,YAAY;EAAA,eACZ,CAAC;AAEP,CAAC;AAAAD,EAAA,CA5CKD,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}