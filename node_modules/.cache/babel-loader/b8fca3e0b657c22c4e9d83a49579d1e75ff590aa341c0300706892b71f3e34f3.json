{"ast":null,"code":"/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\nlet locked = false;\nconst _randomBytes = function (length) {\n  return new Uint8Array(crypto_random(length));\n};\nlet __randomBytes = _randomBytes;\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length) {\n  return __randomBytes(length);\n}\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () {\n  locked = true;\n};\nrandomBytes.register = function (func) {\n  if (locked) {\n    throw new Error(\"randomBytes is locked\");\n  }\n  __randomBytes = func;\n};\nObject.freeze(randomBytes);","map":{"version":3,"names":["randomBytes","crypto_random","locked","_randomBytes","length","Uint8Array","__randomBytes","_","lock","register","func","Error","Object","freeze"],"sources":["C:/Users/hikme/OneDrive/Masaüstü/metamask-connection/metamask-connection/node_modules/ethers/lib.esm/crypto/random.js"],"sourcesContent":["/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\nlet locked = false;\nconst _randomBytes = function (length) {\n    return new Uint8Array(crypto_random(length));\n};\nlet __randomBytes = _randomBytes;\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length) {\n    return __randomBytes(length);\n}\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function () { locked = true; };\nrandomBytes.register = function (func) {\n    if (locked) {\n        throw new Error(\"randomBytes is locked\");\n    }\n    __randomBytes = func;\n};\nObject.freeze(randomBytes);\n//# sourceMappingURL=random.js.map"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,IAAIC,aAAa,QAAQ,aAAa;AAC1D,IAAIC,MAAM,GAAG,KAAK;AAClB,MAAMC,YAAY,GAAG,SAAAA,CAAUC,MAAM,EAAE;EACnC,OAAO,IAAIC,UAAU,CAACJ,aAAa,CAACG,MAAM,CAAC,CAAC;AAChD,CAAC;AACD,IAAIE,aAAa,GAAGH,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASH,WAAWA,CAACI,MAAM,EAAE;EAChC,OAAOE,aAAa,CAACF,MAAM,CAAC;AAChC;AACAJ,WAAW,CAACO,CAAC,GAAGJ,YAAY;AAC5BH,WAAW,CAACQ,IAAI,GAAG,YAAY;EAAEN,MAAM,GAAG,IAAI;AAAE,CAAC;AACjDF,WAAW,CAACS,QAAQ,GAAG,UAAUC,IAAI,EAAE;EACnC,IAAIR,MAAM,EAAE;IACR,MAAM,IAAIS,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACAL,aAAa,GAAGI,IAAI;AACxB,CAAC;AACDE,MAAM,CAACC,MAAM,CAACb,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}